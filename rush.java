// package Seminar1_java;

// import java.util.Scanner;

// public class rush {

    /*
     * Метод length() позволяет узнать длину строки – сколько в ней символов.
     * н-р
     * String name = "Rome";
     * int count = name.length();
     * 
     */
    /*
     * Метод toLowerCase() позволяет преобразовать все символы строки в маленькие
     * (строчные)
     * н-р
     * String name = "ROM123";
     * String name2 = name.toLowerCase()
     */

    /*
     * Метод toUpperCase() позволяет преобразовать все символы строки в большие
     * (заглавные)
     * н-р
     * String name = "rom123";
     * String name2 = name.toUpperCase();
     */

    // Чтение с клавиатуры
    /*
     * Scanner console = new Scanner(System.in); //Создаем объект класса Scanner.
     * String name = console.nextLine(); //Читаем с клавиатуры строку текста.
     * int age = console.nextInt(); //Читаем с клавиатуры число.
     * double number = console.nextDouble(); // Чтобы считать с клавиатуры дробное
     * числo
     */

    // Метод Описание
    // nextByte() Считывает данные и преобразует их в тип byte
    // nextShort() Считывает данные и преобразует их в тип short
    // nextInt() Считывает данные и преобразует их в тип int
    // nextLong() Считывает данные и преобразует их в тип long
    // nextFloat() Считывает данные и преобразует их в тип float
    // nextDouble() Считывает данные и преобразует их в тип double
    // nextBoolean() Считывает данные и преобразует их в тип boolean
    // next() Считывает одно «слово». Слова разделяются пробелами или enter
    // nextLine() Считывает целую строку

    // Есть еще методы, которые позволяют проверить тип еще не считанных данных
    // (чтобы знать, каким методом их считывать).

    // Метод Описание
    // hasNextByte() Там тип byte? Его можно будет преобразовать к byte?
    // hasNextShort() Там тип short? Его можно будет преобразовать к short?
    // hasNextInt() Там тип int? Его можно будет преобразовать к int?
    // hasNextLong() Там тип long? Его можно будет преобразовать к long?
    // hasNextFloat() Там тип float? Его можно будет преобразовать к float?
    // hasNextDouble() Там тип double? Его можно будет преобразовать к double?
    // hasNextBoolean() Там тип boolean? Его можно будет преобразовать к boolean?
    // hasNext() Там есть еще одно слово?
    // hasNextLine() Там есть еще одна строка?

    /*
     * Чтобы Scanner принимал строку на ввод предварительно введенную
     * String str = "текст";
     * Scanner scanner = new Scanner(str);
     */

    // Ввести с клавиатуры имя и возраст. Если возраст в пределах 18-28
    // (включительно), то вывести надпись
    // "Имя, явитесь в военкомат", где Имя - это имя, введенное ранее с клавиатуры.

    // Пример ввода:
    // Amigo
    // 18
    // Пример вывода:
    // Amigo, явитесь в военкомат

    // Требования:
    // Программа должна считывать данные с клавиатуры два раза.
    // Программа должна использовать команду System.out.println() или
    // System.out.print().
    // Если возраст в пределах 18-28 (включительно), то вывести только сообщение
    // "Имя, явитесь в военкомат".
    // Если возраст не находится в указанных пределах, то ничего выводить не нужно.

    /*
     * Призывная кампания
     */

    // public static void main(String[] args) {
    // String militaryCommissar = ", явитесь в военкомат";
    // //напишите тут ваш код
    // Scanner console = new Scanner(System.in);
    // String name = console.nextLine();
    // int age = console.nextInt();
    // if (age >= 18) {
    // if (age <= 28) {
    // System.out.println(name + militaryCommissar);
    // }
    // }

    // }
    // У нас есть программа, которая считывает с клавиатуры два числа и выводит на экран 
    // большее из них. Если числа одинаковые, то выводится любое.
    // Перепиши программу с использованием тернарного оператора, 
    // чтобы ее функционал остался без изменений.
    
    // Требования:
    // •	Программа должна считывать два числа c клавиатуры.
    // •	Вместо оператора if-else в программе нужно использовать тернарный оператор.
    // •	Функционал программы не должен измениться.
// public class Solution {
//     public static void main(String[] args) {
//         Scanner scanner = new Scanner(System.in);
//         int numberA = scanner.nextInt();
//         int numberB = scanner.nextInt();
        
//         System.out.println(numberA > numberB ? numberA : numberB);
//     }

// Но это еще не все: разница чисел вполне может оказаться отрицательным числом. 
// Поэтому, чтобы такой подход работал, нужно сравнивать не просто разницу чисел, а модуль 
// разницы чисел: |a-b|

// В Java есть специальный метод для вычисления модуля числа — Math.abs():

// int m = Math.abs(значение);
// Поэтому исправленный вариант нашего примера выше будет выглядеть вот так:

// double a = 1.000001;
// double b = 1.000002;

// if ( Math.abs(b - a) < 0.0001 )
//    System.out.println("Числа равны");
// else
//    System.out.println("Числа не равны");


// Напиши программу, которая считывает с клавиатуры два вещественных числа (double) и 
// выдает сообщение о том, равны ли эти числа с точностью до одной миллионной.

// Требования:
// •	Программа должна считывать два числа c клавиатуры.
// •	Если числа равны, то программа должна вывести сообщение "числа равны".
// •	Если числа не равны, то программа должна вывести сообщение "числа не равны".
// •	Точность сравнения должна достигать одной миллионной (0.000001).

// public class Solution {
//     public static void main(String[] args) {
//         //напишите тут ваш код
//         Scanner console = new Scanner(System.in);
//         double a = console.nextDouble();
//         double b = console.nextDouble();
//         if ( Math.abs(b -a) < 0.000001) {
//             System.out.println("числа равны");
//         //напишите тут ваш код
//         } else {
//             System.out.println("числа не равны");
//         }
//     }
// }
//}
// 
// public class Solution {
//     public static void main(String[] args) {
//         //напишите тут ваш код
//         Scanner console = new Scanner(System.in);
//         String a = console.next();
//         String b = console.next();
//         if (a.equals(b)) {
//             System.out.println("строки одинаковые");
//         } else {
//         //напишите тут ваш код
//         System.out.println("строки разные");
//         }
//     }
// }

// В методе main напиши код попарного сравнения по ссылке строк string1, string2 и string3 с 
// выводом соответствующего сообщения после каждого сравнения:
// "ссылки на строки одинаковые" или "ссылки на строки разные".

// Порядок сравнения должен быть следующим:
// - строку string1 со строкой string2
// - строку string2 со строкой string3
// - строку string1 со строкой string3.
// Требования:
// Поля string1, string2 и string3 и их значения изменять нельзя.
// В методе main должно быть сравнение строк string1 и string2 по ссылке.
// В методе main должно быть сравнение строк string2 и string3 по ссылке.
// В методе main должно быть сравнение строк string1 и string3 по ссылке.
// Программа должна выводить соответствующие сообщения на экран.
// Программа должна выводить на экран 3 строки.

// public class Solution {
//     public static String string1 = "Амиго";
//     public static String string2 = string1;
//     public static String string3 = new String(string1);

//     public static void main(String[] args) {
//         String same = "ссылки на строки одинаковые";
//         String different = "ссылки на строки разные";
//         //напишите тут ваш код
//         if (string1 == string2) {
//         System.out.println(same);
//         } else {
//         System.out.println(different);
//         }
//         if (string2 == string3) {
//         System.out.println(same);
//         } else {
//         System.out.println(different);
//         }
//         if (string3 == string1) {
//         System.out.println(same);
//         } else {
//         System.out.println(different);
//         }
//     }
// }

// Амиго создал секретное слово для доступа к закрытой информации, но у него сломалась клавиатура, и 
// теперь невозможно набирать буквы в верхнем регистре. Напиши программу, которая будет сравнивать введенную 
// строку со строкой из переменной secret, не учитывая регистр.
// Если введенная строка равна строке из переменной secret, программа выводит на экран сообщение 
// "доступ разрешен". В ином случае - "доступ запрещен".

// Требования:
// Программа должна считывать строку c клавиатуры.
// В классе Solution должна быть публичная статическая переменная secret типа String.
// Если введенная строка и строка из переменной secret одинаковые, не учитывая регистр, 
// то программа должна вывести сообщение "доступ разрешен".
// Если введенная строка и строка из переменной secret разные, не учитывая регистр, 
// то программа должна вывести сообщение "доступ запрещен".

// public class Solution {
//     public static String secret = "AmIGo";

//     public static void main(String[] args) {
//         Scanner console = new Scanner(System.in);
//         String s = console.next();
//         //напишите тут ваш код
//         if (s.equalsIgnoreCase(secret)) {
//         System.out.println("доступ разрешен");
//         } else {
//         //напишите тут ваш код
//         System.out.println("доступ запрещен");
//         }
//     }
// }

// Пример сравнения строк
// Приведем только один простой пример: нужно ввести с клавиатуры 
// две строки и определить, одинаковые они, или нет. Вот как будет выглядеть этот код:

// Scanner console = new Scanner(System.in);
// String a = console.nextLine();
// String b = console.nextLine();
// String result = a.equals(b) ? "Одинаковые" : "Разные";
// System.out.println(result);

// Используя цикл while вывести на экран сто раз цитату (переменная quote):
// «Я никогда не буду работать за копейки. Амиго»

// Каждое значение вывести с новой строки.

// Требования:
// Программа должна выводить текст на экран.
// Программа должна выводить на экран 100 раз содержимое переменной quote.
// В программе необходимо использовать цикл while.

// public class Solution {
//     public static void main(String[] args) {
//         String quote = "Я никогда не буду работать за копейки. Амиго";
//         //напишите тут ваш код
//         int count = 100;
//         while (count != 0) {
//             System.out.println(quote);
//             count --;
//         }
//     }
// }

// Напишем программу, в которой нужно вводить с клавиатуры целые числа и считать их сумму, 
// пока пользователь не введет слово "ENTER".
// Вывести на экран полученную сумму и завершить программу.

// Требования:
// Программа должна считывать данные c клавиатуры.
// Необходимо посчитать сумму введенных целых чисел и вывести её на экран, если 
// пользователь ввел стоп слово.
// В программе необходимо использовать цикл while.

// public static void main(String[] args) {
//     //напишите тут ваш код
//     int sum = 0;
//     Scanner per_2 = new Scanner(System.in);
//     boolean exit = false;
//     while (!exit) {
//         if (per_2.hasNextInt()) {
//             int num = per_2.nextInt();
//             sum = sum + num;
//         } else if (per_2.hasNextLine()) {
//             String line = per_2.nextLine();
//             if (line.equals("ENTER")) {
//                 exit = true;
//             }
//         }
//     }
//     System.out.println(sum);
// }

// Ввести с клавиатуры имя и, используя цикл while, 10 раз вывести: <имя> любит меня (переменная text).
// Каждый вывод - с новой строки.
// Пример вывода на экран для имени Света:
// Света любит меня.
// Света любит меня.
// Света любит меня.
// Света любит меня.
// Света любит меня.
// Света любит меня.
// Света любит меня.
// Света любит меня.
// Света любит меня.
// Света любит меня.

// Требования:
// Программа должна считывать имя c клавиатуры.
// Программа должна выводить текст на экран.
// Программа должна выводить 10 раз текст, указанный в задании. Каждый вывод - с новой строки.
// В программе необходимо использовать цикл while.

// public static void main(String[] args) {
//     String text = " любит меня.";
//     //напишите тут ваш код
//     Scanner console = new Scanner(System.in);
//     String name = console.next();
//     int count = 0;
//     while (count != 10) {
//         System.out.println(name + text);
//         count ++;
//     }

// }


// Используя вложенные циклы while (цикл в цикле) выведи на экран прямоугольник размером 5 
// (высота) на 10 (ширина), заполненный буквой 'Q'.

// Пример вывода:
// QQQQQQQQQQ
// QQQQQQQQQQ
// QQQQQQQQQQ
// QQQQQQQQQQ
// QQQQQQQQQQ

// Требования:
// •	Программа должна выводить текст на экран.
// •	Программа должна выводить прямоугольник высотой 5 и шириной 10, заполненный буквами 'Q'.
// •	В программе необходимо использовать вложенные циклы while (цикл в цикле).
// •	Вывод на экран должен происходить в цикле while.

// public static void main(String[] args) {
//     int n = 0;
//     while (n < 5) {
//         int m = 0;
//         while (m < 10) {
        
//         System.out.print("Q");
//         m ++;
//         }
//     System.out.println();
//     n ++;
//     }//напишите тут ваш код

// }
// Используя вложенные циклы while (цикл в цикле) выведи на экран незаполненный прямоугольник (его контур) размером 10 (высота) на 20 (ширина) из букв 'Б'.
// Незаполненная часть состоит из пробелов.

// Пример вывода:
// ББББББББББББББББББББ
// Б                  Б
// Б                  Б
// Б                  Б
// Б                  Б
// Б                  Б
// Б                  Б
// Б                  Б
// Б                  Б
// ББББББББББББББББББББ

// Требования:
// Программа должна выводить текст на экран.
// Программа должна выводить контур прямоугольника высотой 10 и шириной 20 из буквы 'Б'.
// В программе необходимо использовать вложенные циклы while (цикл в цикле).
// Вывод на экран должен происходить в цикле while.

// int height = 10;
// int width = 20;

// // Внешний цикл для строк
// int currentRow = 0;while(currentRow<height)
// {
//     // Внутренний цикл для столбцов
//     int currentColumn = 0;
//     while (currentColumn < width) {
//         // Если это первая или последняя строка, выводим 'Б'
//         if (currentRow == 0 || currentRow == height - 1) {
//             System.out.print("Б");
//         }
//         // Если это не первая и не последняя строка, выводим ' '
//         else {
//             // Если это первый или последний столбец, выводим 'Б'
//             if (currentColumn == 0 || currentColumn == width - 1) {
//                 System.out.print("Б");
//             }
//             // Если это не первый и не последний столбец, выводим ' '
//             else {
//                 System.out.print(" ");
//             }
//         }
//         currentColumn++;
//     }
//     System.out.println(); // Переход на новую строку
//     currentRow++;
// }
// }}

// Вводим данные с клавиатуры и сразу их выводим на экран, пока не будет введено слово "enough".
// Слово "enough" выводить не нужно.
// Для этого необходимо использовать бесконечный цикл (while(true)).

// Подсказка: чтобы завершить бесконечный цикл, используй оператор break.

// Требования:
// •	Программа должна считывать данные c клавиатуры.
// •	В программе необходимо использовать цикл while.
// •	Для завершения бесконечного цикла необходимо использовать оператор break.
// •	Программа должна выводить в консоли все введенные данные с новой строки, пока не будет введено слово "enough".




//     public static void main(String[] args) {
//         //напишите тут ваш код
//         Scanner console = new Scanner(System.in);
      
//         while (true) {
//             String text = console.next();
//             if (text.equals("enough"))
//             break;
//             System.out.println(text)
//         } 
//
//     }
// }

// Вывести на экран сумму чисел от 1 до 100 включительно, не кратных 3. Для этого используй цикл while.

// Подсказка: чтобы в цикле перейти к следующему числу, используй оператор continue.

// Требования:
// Программа должна вывести в консоль сумму всех чисел от 1 до 100 включительно, не кратных 3.
// В программе необходимо использовать цикл while.
// В программе необходимо использовать оператор continue.

// package seminar1;

// /* 
// Сумма чисел, не кратных 3
// */

// public class rush {
//     public static void main(String[] args) {
//         //напишите тут ваш код
//         int i = 1;
//         int sum = 0;
//         while (i <= 100) {
//             if ((i % 3) == 0){
//                 i++;
//                 continue;
//             }
//             sum = sum + i;
//             i++;
//         }
//         System.out.println(sum);
//     }
// }

// 
// Программа должна считывать целые числа с клавиатуры до тех пор, пока не будет введено что-то другое: 
// например, строка или символ. Выведи на экран минимальное число из введенных. Если введено несколько таких чисел, 
// необходимо вывести любое из них.

// Пример ввода:
// 8
// 4
// 9
// 4
// 5
// e

// Пример вывода:
// 4
// Требования:
// •	Программа должна считывать числа c клавиатуры.
// •	Программа должна выводить число на экран.
// •	Программа должна выводить на экран минимальное из введенных целых чисел.
// •	Если введено несколько минимальных чисел, необходимо вывести любое.
// •	Если введен только один нечисловой символ, то вывести на экран максимальное значение числа типа int.
// •	Считывать данные с клавиатуры необходимо в цикле while.

// package seminar1;

// import java.util.Scanner;

// /* 
// Минимум из введенных чисел
// */

// public class rush {
//     public static void main(String[] args) {
//         //напишите тут ваш код
//         Scanner console = new Scanner(System.in);
//         int min = Integer.MAX_VALUE;
//         while (console.hasNextInt()) {
//             int x = console.nextInt();
//             if (x < min) {
//                 min = x;
//             }
            
//         }
//         System.out.println(min);

//     }
// }



// Программа должна считывать целые числа с клавиатуры до тех пор, пока не будет введено что-то другое: например, 
// строка или символ. Выведи на экран максимальное четное число из введенных. Если введено несколько таких чисел, 
// необходимо вывести любое из них.

// Пример ввода:
// 8
// 9
// 8
// 4
// 5
// e

// Пример вывода:
// 8
// Требования:
// •	Программа должна считывать числа c клавиатуры.
// •	Программа должна выводить число на экран.
// •	Программа должна выводить на экран максимальное четное из введенных целых чисел.
// •	Если введено несколько максимальных четных чисел, необходимо вывести любое.
// •	Если среди введенных символов нет четного числа или введен только один не числовой символ, 
// то вывести на экран минимальное значение числа типа int.
// •	Считывать данные с клавиатуры необходимо в цикле while.

// package seminar1;

// import java.util.Scanner;

/* 
Максимум из введенных чисел
*/

// public class rush {
//     public static void main(String[] args) {
//         //напишите тут ваш код
//         Scanner console = new Scanner(System.in);
//         int max = Integer.MIN_VALUE;
//         while (console.hasNextInt()) {
//             int x = console.nextInt();
//             if (x % 2 == 0 && x > max) {
//                 max = x;
//             }
//         }
//         System.out.println(max);

//     }
// }

// Считывать целые числа с клавиатуры до тех пор, пока не будет введено что-то другое: например, строка или символ.
// Должно быть введено минимум два числа. Если введено меньше двух целых чисел, то такую ситуацию обрабатывать не нужно, 
// а программа может быть завершена с ошибкой.
// Вывести на экран второе по величине целое число после минимального из введенных с клавиатуры. Если таких чисел несколько, 
// то необходимо вывести любое из них.
// Минимальных чисел тоже может быть несколько.
// Пример ввода:
// 8
// 4 // минимальное число
// 7
// 4 // минимальное число
// 5 // второе по величине число (второе минимальное)
// 9
// 5 // второе по величине число (второе минимальное)
// exit
// Пример вывода:
// 5

// Требования:
// •	Программа должна считывать числа c клавиатуры.
// •	Программа должна выводить число на экран.
// •	Программа должна выводить на экран второе минимальное из введенных целых чисел.
// •	Если введено несколько вторых минимальных чисел, необходимо вывести любое.
// •	Считывать данные с клавиатуры необходимо в цикле while.

// package seminar1;

// import java.util.Scanner;

// /* 
// Второе минимальное число из введенных
// */

// public class rush {
//     public static void main(String[] args) {
//         Scanner console = new Scanner(System.in);

//         int min1 = Integer.MAX_VALUE;
//         int min2 = Integer.MAX_VALUE;

//         while (console.hasNextInt()) {
//             int x = console.nextInt();
//             if (x < min1) {
//                 min2 = min1;
//                 min1 = x;
//             } else if (x > min1 && x < min2) {
//                 min2 = x;
//             }
//         }

//         System.out.println(min2);
//     }
// }

// Напиши программу, в которой с помощью цикла for на экран будут выведены чётные числа от 1 до 15.
// Каждое значение нужно выводить с новой строки.

// Требования:
// •	Программа должна выводить текст на экран.
// •	Программа должна выводить чётные числа от 1 до 15. Каждое значение вывести с новой строки.
// •	В программе необходимо использовать цикл for.


// Напиши программу, в которой с помощью цикла for на экран будут выведены чётные числа от 1 до 15.
// Каждое значение нужно выводить с новой строки.

// Требования:
// •	Программа должна выводить текст на экран.
// •	Программа должна выводить чётные числа от 1 до 15. Каждое значение вывести с новой строки.
// •	В программе необходимо использовать цикл for.

// package seminar1;

// /* 
// Четные числа
// */

// public class rush {
//     public static void main(String[] args) {
//         //напишите тут ваш код
        
//         for (int x = 1; x <= 15; x++) {
//             if (x % 2 == 0) {
//                 System.out.println(x);
//             }
//         }

//     }
// }

// В методе main с клавиатуры считывается 3 целых числа: start, end (start <= end), multiple.
// Допиши программу, чтобы на экран выводилась сумма чисел от start (включительно) до end (не включительно), 
// кратных multiple.
// Для этого используй цикл for.
// Подсказка: чтобы перейти к следующей итерации цикла, используй оператор continue.

// Требования:
// Программа должна вывести в консоль сумму чисел от start (включительно) до end (не включительно), 
// кратных multiple.
// В программе необходимо использовать цикл for.
// В цикле for необходимо использовать оператор continue.

// package seminar1;

// import java.util.Scanner;

/* 
Сумма кратных чисел
*/

// public class rush {
//     public static void main(String[] args) {
//         Scanner scanner = new Scanner(System.in);
//         int start = scanner.nextInt();
//         int end = scanner.nextInt();
//         int multiple = scanner.nextInt();

//         int sum = 0;
//         //напишите тут ваш код
//         for (int i = start; i < end; i++) {
            
//             if (i % multiple != 0) {
//                 continue;
//             }
//             sum = sum + i;
//         }

//         System.out.println(sum);
//     }
// }

// package seminar1;

// /* 
// Рисуем треугольник
// */

// public class rush {
//     public static void main(String[] args) {
//         for (int i = 0; i < 10; i++) {
//             for (int j = 0; j <= i; j++) {
//                 System.out.print('8');
//             }

//             System.out.println();
//         }
//     }
// }

// Ввести с клавиатуры строку и число number, которое больше 0 и меньше 5.
// Вывести на экран строку number раз с помощью цикла do-while. Каждое значение нужно вывести с новой строки.
// Если число number меньше/равно 0 или больше/равно 5, то введенную строку нужно вывести на экран один раз.
// Пример ввода:
// абв
// 2

// Пример вывода:
// абв
// абв

// Требования:
// •	Программа должна считывать данные c клавиатуры.
// •	Программа должна выводить данные на экран.
// •	Программа должна выводить на экран строку number раз.
// •	Программа должна выводить на экран строку один раз, если число number меньше/равно 0 или больше/равно 5.
// •	В программе необходимо использовать цикл do-while.

// package seminar1;

// import java.util.Scanner;

// /* 
// Хорошего не бывает много
// */

// public class rush{
//     public static void main(String[] args) {
//         //напишите тут ваш код
//         Scanner console = new Scanner(System.in);
//         String str = console.nextLine();
//         int number = console.nextInt();
//         if (number <= 0 || number >= 5) {
//             System.out.println(str);
//             return;
//         }
//         int i = 0;
//         do {
//             System.out.println(str);
//             i++;
//         } while (i < number);
//     }
// }

